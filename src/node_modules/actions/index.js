import {
    FETCH_GOODS_SUCCESS,
    FETCH_GOODS_START,
    FETCH_GOODS_FAILURE,
    LOAD_MORE_GOODS_START,
    LOAD_MORE_GOODS_SUCCESS,
    LOAD_MORE_GOODS_FAILURE,
    FETCH_GOOD_BY_ID_START,
    FETCH_GOOD_BY_ID_FAILURE,
    FETCH_GOOD_BY_ID_SUCCESS,
    ADD_GOOD_TO_BASKET,
    SEARCH_GOOD,
    FETCH_CATEGORIES_START,
    FETCH_CATEGORIES_SUCCESS,
    FETCH_CATEGORIES_FAILURE
} from 'actionTypes'
import {
    fetchGoods as fetchGoodsApi,
    loadMoreGoods as loadMoreGoodsApi,
    fetchGoodById as fetchGoodByIdApi,
    fetchCategories as fetchCategoriesApi
} from 'api'
import {getRenderedGoodsLength} from 'selectors'

export const fetchGoods = () => async dispatch => {
    dispatch({
        type: FETCH_GOODS_START
    })
    try {
      const goods = await fetchGoodsApi()   
      dispatch({
          type: FETCH_GOODS_SUCCESS,
          payload: goods
      })
    } catch (err) {
        dispatch({
            type: FETCH_GOODS_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const loadMoreGoods = () => async (dispatch, getState) => {
    const offset = getRenderedGoodsLength(getState())
    dispatch({
        type: LOAD_MORE_GOODS_START
    })
    try {
      const goods = await loadMoreGoodsApi({offset})   
      dispatch({
          type: LOAD_MORE_GOODS_SUCCESS,
          payload: goods
      })
    } catch (err) {
        dispatch({
            type: LOAD_MORE_GOODS_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const fetchGoodById = id => async dispatch => {
    dispatch({type: FETCH_GOOD_BY_ID_START})

    try {
        const good = await fetchGoodByIdApi(id)
        dispatch({
            type: FETCH_GOOD_BY_ID_SUCCESS,
            payload: good
        })
    } catch (err) {
        dispatch({
            type: FETCH_GOOD_BY_ID_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const addGoodToBasket = id => dispatch => {
    dispatch({
        type: ADD_GOOD_TO_BASKET,
        payload: id
    })
}

export const searchGood = text => dispatch => {
    //синхронный, но если на реальных данных то асинхр и запрос к эндпоинту на сервере по всем данным а не только по тем что есть ан странице
    dispatch({
        type: SEARCH_GOOD,
        payload: text
    })
}

export const fetchCategories = () => async dispatch => {
    dispatch({
        type: FETCH_CATEGORIES_START
    })
    try {
      const categories = await fetchCategoriesApi()   
      dispatch({
          type: FETCH_CATEGORIES_SUCCESS,
          payload: categories
      })
    } catch (err) {
        dispatch({
            type: FETCH_CATEGORIES_FAILURE,
            payload: err,
            error: true
        })
    }
}
