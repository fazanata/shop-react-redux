import * as R from 'ramda'

export const getGoodById = (state, id) => R.prop(id, state.goods)
export const getGoods = state => {
    
    const applySearch = item => R.includes(
        state.goodsPage.search,
        R.prop('name', item)    
    )
    const goods = R.compose(
        //R.tap(x=> console.log('x2=',x)),
        R.filter(applySearch),
        //R.tap(x=> console.log('x1=',x)),
        R.map(id => getGoodById(state, id))
    )(state.goodsPage.ids)
    
    //const goods = R.map(id => getGoodById(state, id), state.goodsPage.ids)
    return goods
}

export const getRenderedGoodsLength = state => R.length(state.goodsPage.ids)


export const getTotalBasketCount = state => R.length(state.basket)

export const getTotalBasketPrice = state => {
    const totalPrice = R.compose(
        R.sum,
        R.pluck('price'),
        R.map(id => getGoodById(state,id))
    )(state.basket)
    return totalPrice
}

export const getCategories = state => R.values(state.categories)

export const getActiveCategoryId = ownProps => R.path(['match', 'params', 'id'], ownProps)